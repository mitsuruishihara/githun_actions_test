name: CreatePR
on:
   pull_request:
     branches:
     - master
     - stg
     - main
     types: [closed]

jobs:
  apply:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      # id-token: write
      # contents: read
      # pull-requests: write
      # repository-projects: read
      actions: write
      checks: write
      contents: write
      deployments: write
      issues: write
      packages: write
      pull-requests: write
      repository-projects: write
      security-events: write
      statuses: write
    steps:
      - name: branch name
        if: contains(github.base_ref, 'master')
        run: | 
          echo "HEAD_BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV

      - name: Checkout
        if: contains(github.base_ref, 'master')
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: master

      - name: Create new branch from master
        if: contains(github.base_ref, 'master')
        run: |
          git checkout -b ${{ env.HEAD_BRANCH }}-stg
          echo "HEAD_BRANCH_STG=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
          git push origin ${{ env.HEAD_BRANCH }}-stg
          # git push origin ${{ env.HEAD_BRANCH_STG }} まだ空
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # HEAD_BRANCH_STG: ${{ github.head_ref }} feature/test-6になった

      - name: create pr feature-stg to stg
        if: contains(github.base_ref, 'master')
        run: |
          gh pr create -H "${{ env.HEAD_BRANCH_STG }}" -B "stg" -t "stg release ${{ env.HEAD_BRANCH }}" --fill --label name "staging-release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: git-pr-release stg to main
        if: contains(github.base_ref, 'stg')
        uses: bakunyo/git-pr-release-action@v1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_PR_RELEASE_BRANCH_PRODUCTION: main
          GIT_PR_RELEASE_BRANCH_STAGING: stg
          GIT_PR_RELEASE_LABELS: prod-release
          GIT_PR_RELEASE_TEMPLATE: .git-pr-release-template





# 1. [開発者] 機能1を開発・PRを作成 (feature/1ブランチを作成 -> PR1)
# 2. [開発者] 機能2を開発・PRを作成 (feature/2ブランチを作成 -> PR2)
# 3. [開発者] PR1のplanを確認して、問題なければfeature/1をマージ (apply)
# 4. [CI] feature/1のマージをトリガーとして、feature/1-stgブランチとstg向けPR3を作成
# 5. [開発者] PR2のplanを確認して、問題なければfeature/2をマージ (apply)
# 6. [CI] feature/2のマージをトリガーとして、feature/2-stgブランチとstg向けPR4を作成
