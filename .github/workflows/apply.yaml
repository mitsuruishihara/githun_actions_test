name: CreatePR
on:
   pull_request:
     branches:
     - master
     - stg
     - main
     types: [closed]

jobs:
  apply:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      # id-token: write
      # contents: read
      # pull-requests: write
      # repository-projects: read
      actions: write
      checks: write
      contents: write
      deployments: write
      issues: write
      packages: write
      pull-requests: write
      repository-projects: write
      security-events: write
      statuses: write
    steps:
      - name: branch name
        run: | 
          echo "${GITHUB_REF#refs/heads/}"
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: master
        # run: echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
        env:
          BRANCH: "${GITHUB_REF#refs/heads/}"

      - name: Create new branch from master
        run: |
          # ↑でcheckoutしてたら派生元branch指定いらない
          # git checkout -b feature/fuga-stg
          # git checkout -b feature/${{ env.GITHUB_REF_NAME }}-stg
          # git push origin feature/${{ env.GITHUB_REF_NAME }}-stg
          git checkout -b feature/$GITHUB_REF_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: create pr feature-stg to stg
        if: contains(github.base_ref, 'master')
        run: |
          gh pr create -H "feature/fuga-stg" -B "stg" -t "元と同じタイトル" --fill
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}




# 1. [開発者] 機能1を開発・PRを作成 (feature/1ブランチを作成 -> PR1)
# 2. [開発者] 機能2を開発・PRを作成 (feature/2ブランチを作成 -> PR2)
# 3. [開発者] PR1のplanを確認して、問題なければfeature/1をマージ (apply)
# 4. [CI] feature/1のマージをトリガーとして、feature/1-stgブランチとstg向けPR3を作成
# 5. [開発者] PR2のplanを確認して、問題なければfeature/2をマージ (apply)
# 6. [CI] feature/2のマージをトリガーとして、feature/2-stgブランチとstg向けPR4を作成
